AWSTemplateFormatVersion: 2010-09-09



Description:  This template deploys a VPC, with a pair of public and private subnet on an
  Availability Zone. It deploys an internet gateway, with a default
  route on the public subnets. It deploys a  NAT gateway ),
  and default routes for it in the private subnet.

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: DE-Extract

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 192.168.0.0/16

  DataCenterPublicSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 192.168.10.0/24


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  DataCenterPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref DataCenterPublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Data Center Subnet (AZ1)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  

  DataCenterPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref DataCenterPublicSubnet


  WindowsInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: DE-Extract-WindowsInstanceSG
      GroupDescription: Security group with  ingress rule
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 3389
          IpProtocol: tcp
          ToPort: 3389
      Tags:
        - Key: Name
          Value: DE-Extract-WindowsInstanceSG

  FileServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: DE-Extract-FileServerSG
      GroupDescription: (Security group permits access to the data centers file server)
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: 192.168.10.0/24
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value: DE-Extract-FileServerSG
  

  FileGatewaySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: DE-Extract-FileGatewaySG
      GroupDescription: (Security group permits access to the file gateway instance)
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: 192.168.0.0/16
          FromPort: 0
          IpProtocol: tcp
          ToPort: 65535
      Tags:
        - Key: Name
          Value: DE-Extract-FileGatewaySG
      

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref DataCenterPublicSubnet  ]]

  

  DataCenterPublicSubnet:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref DataCenterPublicSubnet

  

  WindowsInstanceSG:
    Description: Security group with no ingress rule
    Value: !Ref WindowsInstanceSG

  FileServerSG:
    Description: Security group with no ingress rule
    Value: !Ref FileServerSG

  FileGatewaySG:
    Description: Security group with no ingress rule
    Value: !Ref FileGatewaySG